{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAKSHAM\\\\Documents\\\\STUDY\\\\DOT\\\\kool\\\\client\\\\src\\\\components\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contacts(_ref) {\n  _s();\n\n  let {\n    contacts,\n    changeChat\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined); // const [currentUserImage, setCurrentUserImage] = useState(undefined);\n\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(async () => {\n    const data = await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n    setCurrentUserName(data.username); // setCurrentUserImage(data.avatarImage);\n  }, []);\n\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chatify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\",\n        children: contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n            onClick: () => changeCurrentChat(index, contact),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: contact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, contact._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-user\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User : \", currentUserName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contacts, \"sMyYTo6/1nM5CNi1gFO9ApYWsLY=\");\n\n_c = Contacts;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 9% 1%;\n  overflow: hidden;\n  background-color: #272727;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    h3 {\n      color: rgb(50, 168, 137);\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: rgb(50, 168, 137);\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: black;\n      min-height: 3rem;\n      cursor: pointer;\n      width: 80%;\n      border: 2px solid rgb(50, 168, 137);\n      border-radius: 1rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      ${\"\"\n/* .avatar {\nimg {\nheight: 3rem;\n}\n} */\n}\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n    .selected {\n      background-color: rgb(50, 168, 137);\n    }\n  }\n\n  .current-user {\n    background-color: rgb(50, 168, 137);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    border-radius: 1rem;\n    ${\"\"\n/* .avatar {\nimg {\nheight: 4rem;\nmax-inline-size: 100%;\n}\n} */\n}\n    .username {\n      h2 {\n        color: white;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/SAKSHAM/Documents/STUDY/DOT/kool/client/src/components/Contacts.jsx"],"names":["React","useState","useEffect","styled","Logo","Contacts","contacts","changeChat","currentUserName","setCurrentUserName","undefined","currentSelected","setCurrentSelected","data","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","username","changeCurrentChat","index","contact","map","_id","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,eAAe,SAASC,QAAT,OAA4C;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA0B;AACzD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAACS,SAAD,CAAtD,CADyD,CAEzD;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAACS,SAAD,CAAtD;AAEAR,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMW,IAAI,GAAG,MAAMC,IAAI,CAACC,KAAL,CACjBC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,uBAAjC,CADiB,CAAnB;AAGAX,IAAAA,kBAAkB,CAACI,IAAI,CAACQ,QAAN,CAAlB,CAJoB,CAKpB;AACD,GANQ,EAMN,EANM,CAAT;;AASA,QAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC5CZ,IAAAA,kBAAkB,CAACW,KAAD,CAAlB;AACAhB,IAAAA,UAAU,CAACiB,OAAD,CAAV;AACD,GAHD;;AAIA,sBACE;AAAA,2BAEI,QAAC,SAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGlB,QAAQ,CAACmB,GAAT,CAAa,CAACD,OAAD,EAAUD,KAAV,KAAoB;AAChC,8BACE;AAEE,YAAA,SAAS,EAAG,WACVA,KAAK,KAAKZ,eAAV,GAA4B,UAA5B,GAAyC,EAC1C,EAJH;AAKE,YAAA,OAAO,EAAE,MAAMW,iBAAiB,CAACC,KAAD,EAAQC,OAAR,CALlC;AAAA,mCAaE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACE;AAAA,0BAAKA,OAAO,CAACH;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF,aACOG,OAAO,CAACE,GADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAmBD,SApBA;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,eA2BE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAOE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAA,kCAAYlB,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AA6CD;;GA/DuBH,Q;;KAAAA,Q;AAgExB,MAAMsB,SAAS,GAAGxB,MAAM,CAACyB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QACQ;AAAG;AACX;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACM;AAAG;AACT;AACA;AACA;AACA;AACA;AACK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzFA;MAAMD,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\n\nexport default function Contacts({ contacts, changeChat }) {\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  // const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n\n  useEffect(async () => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    setCurrentUserName(data.username);\n    // setCurrentUserImage(data.avatarImage);\n  }, []);\n\n\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n  return (\n    <>\n      {/* {currentUserImage && currentUserImage && ( */}\n        <Container>\n          <div className=\"brand\">\n            <h1>Chatify</h1>\n          </div>\n          <div className=\"contacts\">\n            {contacts.map((contact, index) => {\n              return (\n                <div\n                  key={contact._id}\n                  className={`contact ${\n                    index === currentSelected ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => changeCurrentChat(index, contact)}\n                >\n                  {/* <div className=\"avatar\">\n                    <img\n                      src={`data:image/svg+xml;base64,${contact.avatarImage}`}\n                      alt=\"\"\n                    />\n                  </div> */}\n                  <div className=\"username\">\n                    <h3>{contact.username}</h3>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"current-user\">\n            {/* <div className=\"avatar\">\n              <img\n                src={`data:image/svg+xml;base64,${currentUserImage}`}\n                alt=\"avatar\"\n              />\n            </div> */}\n            <div className=\"username\">\n              <h2>User : {currentUserName}</h2>\n            </div>\n          </div>\n        </Container>\n      {/* )} */}\n    </>\n  );\n}\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 9% 1%;\n  overflow: hidden;\n  background-color: #272727;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    h3 {\n      color: rgb(50, 168, 137);\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: rgb(50, 168, 137);\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: black;\n      min-height: 3rem;\n      cursor: pointer;\n      width: 80%;\n      border: 2px solid rgb(50, 168, 137);\n      border-radius: 1rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      ${\n        \"\" /* .avatar {\n        img {\n          height: 3rem;\n        }\n      } */\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n    .selected {\n      background-color: rgb(50, 168, 137);\n    }\n  }\n\n  .current-user {\n    background-color: rgb(50, 168, 137);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    border-radius: 1rem;\n    ${\n      \"\" /* .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    } */\n    }\n    .username {\n      h2 {\n        color: white;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}